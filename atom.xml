<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HuangheheTech</title>
  
  
  <link href="https://hehehuang.github.io/atom.xml" rel="self"/>
  
  <link href="https://hehehuang.github.io/"/>
  <updated>2022-09-29T12:39:42.839Z</updated>
  <id>https://hehehuang.github.io/</id>
  
  <author>
    <name>Huang He</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Recommender System</title>
    <link href="https://hehehuang.github.io/2022/09/29/Recommender-System/"/>
    <id>https://hehehuang.github.io/2022/09/29/Recommender-System/</id>
    <published>2022-09-29T12:38:48.000Z</published>
    <updated>2022-09-29T12:39:42.839Z</updated>
    
    
    
    
    <category term="Big Data" scheme="https://hehehuang.github.io/categories/Big-Data/"/>
    
    
    <category term="PySpark" scheme="https://hehehuang.github.io/tags/PySpark/"/>
    
  </entry>
  
  <entry>
    <title>Data Science</title>
    <link href="https://hehehuang.github.io/2022/09/29/Data-Science/"/>
    <id>https://hehehuang.github.io/2022/09/29/Data-Science/</id>
    <published>2022-09-28T19:10:26.000Z</published>
    <updated>2022-09-28T19:55:48.923Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>Statistics</p><ul><li>Descriptive Statistic<ul><li>Visualization of data</li></ul></li><li>Inferential Statistics<ul><li>One sample test of difference&#x2F;One sample hypothesis test.</li><li>Confidence Interval</li><li>Contingency Tables and Chi Square Statistic</li><li>T-test or Anova</li><li>Pearson Correlation</li><li>Bi-variate Regression</li><li>Multi-variate Regression</li></ul></li></ul></li><li><p>Probability</p><ul><li><p>Random variable</p></li><li><p>Discrete variable </p></li><li><p>Continous variable</p></li></ul></li><li><p>Line Algebra</p></li><li><p>Calculus</p></li><li><p>Optimization</p><ul><li>Gradient descent</li></ul></li><li><p>Python</p><ul><li>Python Basic</li><li>Python Advance</li><li>Algorithm</li></ul></li><li><p>Web Scraping</p></li><li><p>Machine Learning</p><ul><li><p>Superivor Learning</p><ul><li><p>Regression</p></li><li><p>Classification</p></li></ul></li><li><p>Unsuperivor Learning</p><ul><li>Clusting</li></ul></li></ul></li><li><p>Deep Learning</p></li><li><p>NLP</p></li><li><p>Computer Vision</p></li><li><p>Data Mining</p><ul><li>Network Analysis</li><li>Recommender System</li></ul></li><li><p>Big Data </p><ul><li>Batching Processing<ul><li>Hadoop</li><li>Spark</li><li>Hive</li><li>Kafka</li><li>Flink</li><li>Reids</li></ul></li><li>Stream Processing</li></ul></li><li><p>SQL</p><ul><li>Relation SQL</li><li>NOSQL</li></ul></li><li><p>AWS</p></li><li><p>Docker &amp; K8s </p></li><li><p>Python GUI</p></li><li><p>Web Development</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Statistics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Descriptive Statistic&lt;ul&gt;
&lt;li&gt;Visualization of data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Inferential Statistics&lt;ul&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Spark ML Case</title>
    <link href="https://hehehuang.github.io/2022/09/26/Spark-ML-Case/"/>
    <id>https://hehehuang.github.io/2022/09/26/Spark-ML-Case/</id>
    <published>2022-09-26T09:21:53.000Z</published>
    <updated>2022-09-26T09:21:53.804Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>NLP for DeepLearning</title>
    <link href="https://hehehuang.github.io/2022/09/24/NLP-for-DeepLearning/"/>
    <id>https://hehehuang.github.io/2022/09/24/NLP-for-DeepLearning/</id>
    <published>2022-09-24T10:29:33.000Z</published>
    <updated>2022-10-12T15:12:24.102Z</updated>
    
    <content type="html"><![CDATA[<h3 id="DNN"><a href="#DNN" class="headerlink" title="DNN"></a>DNN</h3><p>CNN</p><p>RNN</p><p>LSTM</p><p>Sequence to Sequence</p><p>BERT</p><p>L</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;DNN&quot;&gt;&lt;a href=&quot;#DNN&quot; class=&quot;headerlink&quot; title=&quot;DNN&quot;&gt;&lt;/a&gt;DNN&lt;/h3&gt;&lt;p&gt;CNN&lt;/p&gt;
&lt;p&gt;RNN&lt;/p&gt;
&lt;p&gt;LSTM&lt;/p&gt;
&lt;p&gt;Sequence to Sequence&lt;/p&gt;
&lt;p&gt;BERT</summary>
      
    
    
    
    <category term="NLP" scheme="https://hehehuang.github.io/categories/NLP/"/>
    
    
    <category term="Deep Learning" scheme="https://hehehuang.github.io/tags/Deep-Learning/"/>
    
  </entry>
  
  <entry>
    <title>English Weekly Plan</title>
    <link href="https://hehehuang.github.io/2022/09/24/English-Weekly-Plan/"/>
    <id>https://hehehuang.github.io/2022/09/24/English-Weekly-Plan/</id>
    <published>2022-09-24T09:45:12.000Z</published>
    <updated>2022-09-30T12:05:06.565Z</updated>
    
    <content type="html"><![CDATA[<h4 id="THINGS-YOU-WILL-NEED"><a href="#THINGS-YOU-WILL-NEED" class="headerlink" title="THINGS YOU WILL NEED:"></a>THINGS YOU WILL NEED:</h4><ul><li>1 hour per day (30 minutes will work as well).</li><li>a notebook and a pen to write down new vocabulary each day.</li><li>an English song.</li><li>an English a book.</li><li>an English TV show.</li></ul><h4 id="MONDAYS"><a href="#MONDAYS" class="headerlink" title="MONDAYS"></a>MONDAYS</h4><p>(Spend 30-40 minutes Reading)</p><ul><li>Read your book.</li><li>Read the news.</li><li>Read an article on <a href="http://simple.wikipedia.com/">http://simple.wikipedia.com</a></li><li>Write down some new words in your notebook with their definition.</li><li>Spend the rest of your hour:<br> – Reading out loud from your book<br> – Writing out some passages from your book.<br> – Listening to the audiobook of your book.<br> – Using Duolingo or other learning apps.</li></ul><h4 id="TUESDAYS"><a href="#TUESDAYS" class="headerlink" title="TUESDAYS"></a>TUESDAYS</h4><p>(Spend 30-40 minutes Writing)</p><ul><li>Write what you did yesterday, today, and tomorrow in your notebook.</li><li>Write a few comments on Youtube videos.</li><li>Write some sentences about what you like and dislike about your song, your book, and your TV show.</li><li>Write a summary of what you have read in your book the day before.</li><li>Put some new words in your dictionary.</li><li>Spend the rest of your hour:<br> – Reading what you have written.<br> – Listening to what you have written by pasting your writing into Google translate and have it read it to you.<br> – Reading what you have written out loud.<br> – Using Duolingo or other learning apps.</li></ul><h4 id="WEDNESDAYS"><a href="#WEDNESDAYS" class="headerlink" title="WEDNESDAYS"></a>WEDNESDAYS</h4><p>(Spend 30-40 minutes Listening):</p><ul><li>Watch your TV show.</li><li>Listen to your song.</li><li>Listen to the Audiobook of your book if you have it.</li><li>Watch a few Youtube videos.</li><li>Put new words in your dictionary.</li><li>Spend the rest of your hour:<br> – Read about your TV show.<br> – Write about how your song makes you feel.<br> – Mimic or shadow people from your TV show.<br> – Sing along to your song.</li></ul><h4 id="THURSDAYS"><a href="#THURSDAYS" class="headerlink" title="THURSDAYS"></a>THURSDAYS</h4><p>(Spend 30-40 minutes Speaking):</p><ul><li>Hire a tutor on:<br> – Preply: <a href="http://tracking.preply.com/SH2X">http://tracking.preply.com/SH2X</a><br> – Cambly: <a href="http://cambly.com/">http://cambly.com</a><br> – iTalki: <a href="http://italki.com/">http://italki.com</a></li><li>Talk out loud.</li><li>Narrate your life.</li><li>Record yourself and play it back.</li><li>Put words in your dictionary.</li><li>Spend the rest of your hour:<br> – Reading out loud.<br> – Singing out loud.<br> – Shadowing or mimicking actors from your TV show.</li></ul><h4 id="FRIDAYS"><a href="#FRIDAYS" class="headerlink" title="FRIDAYS"></a>FRIDAYS</h4><p>(Spend the Entire hour on Vocabulary):</p><ul><li>Review all the words in your dictionary.</li><li>Write them out.</li><li>Say them out loud.</li><li>Use them in a sentence.</li><li>Make a <a href="http://quizlet.com/">http://quizlet.com</a> set.</li><li>Make flashcards.</li><li>Work until you have them all memorized.</li></ul><h4 id="WEEKENDS"><a href="#WEEKENDS" class="headerlink" title="WEEKENDS:"></a>WEEKENDS:</h4><ul><li>Find a new song.</li><li>Find a new book.</li><li>Find a new TV show.</li><li>Take a break.</li></ul><h4 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h4><p><a href="https://www.youtube.com/watch?v=5-T6Xqlh6BU&amp;t=283s">https://www.youtube.com/watch?v=5-T6Xqlh6BU&amp;t=283s</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;THINGS-YOU-WILL-NEED&quot;&gt;&lt;a href=&quot;#THINGS-YOU-WILL-NEED&quot; class=&quot;headerlink&quot; title=&quot;THINGS YOU WILL NEED:&quot;&gt;&lt;/a&gt;THINGS YOU WILL NEED:&lt;/h4</summary>
      
    
    
    
    <category term="English" scheme="https://hehehuang.github.io/categories/English/"/>
    
    
  </entry>
  
  <entry>
    <title>Write an article</title>
    <link href="https://hehehuang.github.io/2022/09/24/Write-an-artical/"/>
    <id>https://hehehuang.github.io/2022/09/24/Write-an-artical/</id>
    <published>2022-09-24T08:56:07.000Z</published>
    <updated>2022-09-24T09:43:02.358Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Five-step-to-write-an-article"><a href="#Five-step-to-write-an-article" class="headerlink" title="Five step to write an article"></a>Five step to write an article</h1><h2 id="1-Ask-a-question"><a href="#1-Ask-a-question" class="headerlink" title="1. Ask a question"></a>1. Ask a question</h2><h2 id="2-Write-a-thesis-statement-answer-the-question"><a href="#2-Write-a-thesis-statement-answer-the-question" class="headerlink" title="2. Write a thesis statement (answer the question)"></a>2. Write a thesis statement (answer the question)</h2><h2 id="3-Write-an-introduction"><a href="#3-Write-an-introduction" class="headerlink" title="3. Write an introduction"></a>3. Write an introduction</h2><h3 id="How-to-write-an-introduction"><a href="#How-to-write-an-introduction" class="headerlink" title="How to write an introduction"></a>How to write an introduction</h3><ol><li><p>Grabbers (attention)</p><ul><li>Joke</li><li>Proverb&#x2F;quote</li><li>anecdote </li><li>surprising fact</li><li>curiosity(?)</li></ul></li><li><p>Topic(subject)  -what </p><ul><li>reasons(or main ideas) (3)</li></ul></li><li><p>Thesis -argument</p><ul><li>whether the topic is negative and positive </li><li>5w1h</li></ul></li></ol><h2 id="4-Prove-your-thesis"><a href="#4-Prove-your-thesis" class="headerlink" title="4. Prove your thesis"></a>4. Prove your thesis</h2><p>Essay Body (Structure)</p><h3 id="How-to-write-an-paragraph"><a href="#How-to-write-an-paragraph" class="headerlink" title="How to write an paragraph"></a>How to write an paragraph</h3><ol><li><p>Topic sentence &amp; Closing sentence</p><ul><li>identifies the topic</li><li>states what will be said about the topic</li></ul></li><li><p>Specific details &amp; supporting facts</p><ul><li>Specific details &amp; supporting faccts （for example: Facts, example from a source)</li></ul></li><li><p>Your thinking about the facts</p><ul><li>your own thoughts about the details &amp; facts (analogy, analysis, interpretation or explanation of facts)</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2></li></ol><h2 id="5-Write-your-conclusion"><a href="#5-Write-your-conclusion" class="headerlink" title="5. Write your conclusion"></a>5. Write your conclusion</h2><h2 id="6-Extra-Topic"><a href="#6-Extra-Topic" class="headerlink" title="6. Extra Topic"></a>6. Extra Topic</h2><h3 id="how-to-write-a-summarize"><a href="#how-to-write-a-summarize" class="headerlink" title="how to write a summarize"></a>how to write a summarize</h3><p>how to write a comment</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h2><p><a href="https://www.youtube.com/watch?v=Mwv3OlYojWw&amp;t=505s">https://www.youtube.com/watch?v=Mwv3OlYojWw&amp;t=505s</a></p><p><a href="https://www.youtube.com/watch?v=IN6IOSMviS4">https://www.youtube.com/watch?v=IN6IOSMviS4</a></p><p><a href="https://www.youtube.com/watch?v=jLdvEFtUuMM&amp;t=56s">https://www.youtube.com/watch?v=jLdvEFtUuMM&amp;t=56s</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Five-step-to-write-an-article&quot;&gt;&lt;a href=&quot;#Five-step-to-write-an-article&quot; class=&quot;headerlink&quot; title=&quot;Five step to write an article&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="English" scheme="https://hehehuang.github.io/categories/English/"/>
    
    
    <category term="Writing" scheme="https://hehehuang.github.io/tags/Writing/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning</title>
    <link href="https://hehehuang.github.io/2022/09/23/Machine-Learning/"/>
    <id>https://hehehuang.github.io/2022/09/23/Machine-Learning/</id>
    <published>2022-09-23T13:04:19.000Z</published>
    <updated>2022-09-23T13:04:19.039Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Data Analysis with Pyspark</title>
    <link href="https://hehehuang.github.io/2022/09/23/Data-Analysis-with-Pyspark/"/>
    <id>https://hehehuang.github.io/2022/09/23/Data-Analysis-with-Pyspark/</id>
    <published>2022-09-23T10:25:22.501Z</published>
    <updated>2022-09-23T10:36:13.511Z</updated>
    
    
    
    
    <category term="Data Analysis" scheme="https://hehehuang.github.io/categories/Data-Analysis/"/>
    
    
    <category term="PySpark" scheme="https://hehehuang.github.io/tags/PySpark/"/>
    
  </entry>
  
  <entry>
    <title>Data Analysis with SQL</title>
    <link href="https://hehehuang.github.io/2022/09/23/Data-Analysis-with-SQL/"/>
    <id>https://hehehuang.github.io/2022/09/23/Data-Analysis-with-SQL/</id>
    <published>2022-09-23T10:24:38.833Z</published>
    <updated>2022-09-23T10:36:39.635Z</updated>
    
    
    
    
    <category term="Data Analysis" scheme="https://hehehuang.github.io/categories/Data-Analysis/"/>
    
    
    <category term="SQL" scheme="https://hehehuang.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Data Analysis with Python</title>
    <link href="https://hehehuang.github.io/2022/09/23/Data-Analysis-with-Python/"/>
    <id>https://hehehuang.github.io/2022/09/23/Data-Analysis-with-Python/</id>
    <published>2022-09-23T10:24:12.280Z</published>
    <updated>2022-09-23T10:37:04.870Z</updated>
    
    
    
    
    <category term="Data Analysis" scheme="https://hehehuang.github.io/categories/Data-Analysis/"/>
    
    
    <category term="Python" scheme="https://hehehuang.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python OOP</title>
    <link href="https://hehehuang.github.io/2022/09/23/Python%20OOP/"/>
    <id>https://hehehuang.github.io/2022/09/23/Python%20OOP/</id>
    <published>2022-09-23T10:22:54.991Z</published>
    <updated>2022-09-23T10:23:04.903Z</updated>
    
    
    
    
    <category term="Python" scheme="https://hehehuang.github.io/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python Basic</title>
    <link href="https://hehehuang.github.io/2022/09/23/Python%20Basic/"/>
    <id>https://hehehuang.github.io/2022/09/23/Python%20Basic/</id>
    <published>2022-09-23T10:21:30.629Z</published>
    <updated>2022-09-30T08:44:53.183Z</updated>
    
    <content type="html"><![CDATA[<p>opening quotation mark, </p><p>brace</p><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p>using variable in string </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">full_name = f&#x27;&#123;first_name&#125;&#123;last_name&#125;&#x27;</span><br></pre></td></tr></table></figure><p>adding whitespce to string with tabs or newlines</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;\tPython&#x27;)</span><br><span class="line">\t means tabs</span><br><span class="line">\n means newlines</span><br></pre></td></tr></table></figure><p>stripping </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stripping</span><br></pre></td></tr></table></figure><p>syntax error : indicates that interpreter doesn’t recognize something in the code as valid python code.</p><p>for example: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># before python 3.6</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>&#x27;</span>) <span class="comment"># it will causing the syntax error, because interpreter doesn&#x27;t recoginize the code. </span></span><br></pre></td></tr></table></figure><h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p>precisely  decimal </p><p>Underscores in Numbers </p><p>Multiple Assignment </p><p>Constants </p><h4 id="List"><a href="#List" class="headerlink" title="List"></a>List</h4><h6 id="manipulating-the-list"><a href="#manipulating-the-list" class="headerlink" title="manipulating the list"></a>manipulating the list</h6><p>changing, </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name[0]= &#x27;hh&#x27;</span><br></pre></td></tr></table></figure><p>add,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># append</span><br><span class="line"></span><br><span class="line"># insert</span><br></pre></td></tr></table></figure><p> removing </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># del</span><br><span class="line"># remove(&#x27;hh&#x27;)</span><br><span class="line"></span><br><span class="line"># pop()</span><br></pre></td></tr></table></figure><h6 id="Oranizing-the-list"><a href="#Oranizing-the-list" class="headerlink" title="Oranizing the list"></a>Oranizing the list</h6><p>sorting a list Permanently </p><p>sorting a list temporarily </p><p>printing a list in reverse order</p><p>finding the length of a list </p><p>intentional error</p><p>Looping through an entire list </p><p>a closer look at looping </p><p>make numerical lists</p><p>range() </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>list comprehensions</p><p>working with part of a list </p><p>slicing a list </p><p>copy a list </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_list = my_list[:]</span><br></pre></td></tr></table></figure><p>copy() function just give the tag for value. </p><p>but make new list for object. we actually have two separate lists. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy </span><br><span class="line">value = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(value) )</span><br><span class="line">new_value = copy.copy(value)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(new_value) )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> copy </span><br><span class="line">my_list = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(my_list) )</span><br><span class="line">new_list = copy.copy(my_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(new_list) )</span><br></pre></td></tr></table></figure><p>loop list </p><h4 id="Tuple"><a href="#Tuple" class="headerlink" title="Tuple"></a>Tuple</h4><p>immutable list: can not change</p><h4 id="If-statement"><a href="#If-statement" class="headerlink" title="If statement"></a>If statement</h4><h4 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h4><h4 id="While-loops"><a href="#While-loops" class="headerlink" title="While loops"></a>While loops</h4><h4 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h4><h4 id="Classes"><a href="#Classes" class="headerlink" title="Classes"></a>Classes</h4><h4 id="Files-and-Exception"><a href="#Files-and-Exception" class="headerlink" title="Files and Exception"></a>Files and Exception</h4><h4 id="Testing-your-code"><a href="#Testing-your-code" class="headerlink" title="Testing your code"></a>Testing your code</h4><p>build in data type</p><h4 id="If-statement-1"><a href="#If-statement-1" class="headerlink" title="If statement"></a>If statement</h4><h4 id="While-Statement"><a href="#While-Statement" class="headerlink" title="While Statement"></a>While Statement</h4><h4 id="Easy-Principle"><a href="#Easy-Principle" class="headerlink" title="Easy Principle"></a>Easy Principle</h4><ul><li><p>indentation: 4 space</p></li><li><p><strong>Line Length</strong>: less than 80 characters </p></li><li><p>blank line: proper blank line to seperate two sections</p></li><li><p>if statement: i &gt; 4 </p></li><li><p>[google python code styling]: <a href="https://google.github.io/styleguide/pyguide.html">https://google.github.io/styleguide/pyguide.html</a>“google python code styling”</p></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h4><p>&lt;<Python Crash Course>&gt;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;opening quotation mark, &lt;/p&gt;
&lt;p&gt;brace&lt;/p&gt;
&lt;h4 id=&quot;String&quot;&gt;&lt;a href=&quot;#String&quot; class=&quot;headerlink&quot; title=&quot;String&quot;&gt;&lt;/a&gt;String&lt;/h4&gt;&lt;p&gt;using var</summary>
      
    
    
    
    <category term="Python" scheme="https://hehehuang.github.io/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Array &amp; Linked List</title>
    <link href="https://hehehuang.github.io/2022/09/23/Array%20&amp;%20Linked%20List/"/>
    <id>https://hehehuang.github.io/2022/09/23/Array%20&amp;%20Linked%20List/</id>
    <published>2022-09-23T10:20:09.606Z</published>
    <updated>2022-09-23T10:20:32.597Z</updated>
    
    
    
    
    <category term="Python" scheme="https://hehehuang.github.io/categories/Python/"/>
    
    
    <category term="Data Structure" scheme="https://hehehuang.github.io/tags/Data-Structure/"/>
    
    <category term="Algorithm" scheme="https://hehehuang.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Data Engineer</title>
    <link href="https://hehehuang.github.io/2022/09/23/Data%20Engineer/"/>
    <id>https://hehehuang.github.io/2022/09/23/Data%20Engineer/</id>
    <published>2022-09-23T10:12:25.135Z</published>
    <updated>2022-09-23T10:16:35.833Z</updated>
    
    <content type="html"><![CDATA[<p>Data Engineer</p><p>What is Data Engineer?</p><p>What is main duly for data engineer?</p><p>how data engineer work with AWS?</p><p>what can i learn for data engineer?</p><ol><li>Big Data: data pipeline,  </li><li>Cloud service</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Data Engineer&lt;/p&gt;
&lt;p&gt;What is Data Engineer?&lt;/p&gt;
&lt;p&gt;What is main duly for data engineer?&lt;/p&gt;
&lt;p&gt;how data engineer work with AWS?&lt;/p&gt;
&lt;p&gt;wh</summary>
      
    
    
    
    <category term="Big Data" scheme="https://hehehuang.github.io/categories/Big-Data/"/>
    
    <category term="Cloud Service" scheme="https://hehehuang.github.io/categories/Big-Data/Cloud-Service/"/>
    
    
    <category term="AWS" scheme="https://hehehuang.github.io/tags/AWS/"/>
    
    <category term="Data Warehouse" scheme="https://hehehuang.github.io/tags/Data-Warehouse/"/>
    
    <category term="NoSQL" scheme="https://hehehuang.github.io/tags/NoSQL/"/>
    
    <category term="Data Pipeline" scheme="https://hehehuang.github.io/tags/Data-Pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Tree</title>
    <link href="https://hehehuang.github.io/2022/09/22/Tree/"/>
    <id>https://hehehuang.github.io/2022/09/22/Tree/</id>
    <published>2022-09-22T08:36:43.586Z</published>
    <updated>2022-09-22T08:42:39.475Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Tree is the basic data Structure</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">searchTree</span>():</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tree is the basic data Structure&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s</summary>
      
    
    
    
    <category term="Python" scheme="https://hehehuang.github.io/categories/Python/"/>
    
    
    <category term="Data Structure" scheme="https://hehehuang.github.io/tags/Data-Structure/"/>
    
    <category term="Algorithm" scheme="https://hehehuang.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Sorting</title>
    <link href="https://hehehuang.github.io/2022/09/22/Sorting/"/>
    <id>https://hehehuang.github.io/2022/09/22/Sorting/</id>
    <published>2022-09-22T08:34:21.026Z</published>
    <updated>2022-09-22T08:42:36.580Z</updated>
    
    <content type="html"><![CDATA[<p>sorting is algorithm to sort list in order.</p><p>There are ten basic algorithm:</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;sorting is algorithm to sort list in order.&lt;/p&gt;
&lt;p&gt;There are ten basic algorithm:&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Python" scheme="https://hehehuang.github.io/categories/Python/"/>
    
    
    <category term="Algorithm" scheme="https://hehehuang.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>AWS</title>
    <link href="https://hehehuang.github.io/2022/09/20/AWS/"/>
    <id>https://hehehuang.github.io/2022/09/20/AWS/</id>
    <published>2022-09-19T17:45:57.203Z</published>
    <updated>2022-09-25T07:52:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-AWS"><a href="#What-is-AWS" class="headerlink" title="What is AWS?"></a>What is AWS?</h2><p>AWS is the cloud computing platform.</p><p>computing: the bussiness requirement </p><p>platform: provides the software like database and hardware: computing resource</p><p>for example:</p><p>Client want to deploy an web application. he just give money and offer the requirement to cloud computing platform and cloud computing platform will provide a series of services to deploy this web application. </p><h2 id="What-is-AWS-with-Big-Data-ecosystem"><a href="#What-is-AWS-with-Big-Data-ecosystem" class="headerlink" title="What is AWS with Big Data ecosystem"></a>What is AWS with Big Data ecosystem</h2><p>AWS service:</p><h3 id="Saas-software-as-a-service"><a href="#Saas-software-as-a-service" class="headerlink" title="- Saas: software as a service"></a>- Saas: software as a service</h3><ul><li>RDS: amazon relational database service</li><li>DynamoDB: K-V type NOSQL</li><li>Redshift: Data warehouse (<a href="https://www.postgresql.org/">PostgreSQ</a>)</li><li>AWS Glue: ETL tool</li><li>EMR: the Hadoop of AWS</li><li>Kinesis: Stream process</li></ul><h3 id="Paas-Platform-as-a-service"><a href="#Paas-Platform-as-a-service" class="headerlink" title="- Paas: Platform as a service"></a>- Paas: Platform as a service</h3><ul><li>S3: Amazon simple storge service &#x3D; HDFS</li><li>AWS deep learning</li><li>cloud watch &amp; cloud watch log</li></ul><h3 id="Iaas-Infrustructure-as-a-service"><a href="#Iaas-Infrustructure-as-a-service" class="headerlink" title="- Iaas: Infrustructure as a service"></a>- Iaas: Infrustructure as a service</h3><ul><li>EC2 &#x3D; VMware</li><li>VPC</li><li>AWS Direct connect</li></ul><h3 id="Data-Science-on-AWS"><a href="#Data-Science-on-AWS" class="headerlink" title="Data Science on AWS"></a>Data Science on AWS</h3><p>Automated Machine Learning</p><p>ingest Data into the cloud</p><p>Explore the dataset</p><p>prepare the data for model training </p><p>Train model</p><p>optimize model</p><p>Deploy Model to production</p><p>Pipelines and MLOps</p><p>Streaming Analytics and machine learning</p><p>Secure on AWS…</p><h3 id="Data-Engineer-with-AWS"><a href="#Data-Engineer-with-AWS" class="headerlink" title="Data Engineer with AWS"></a>Data Engineer with AWS</h3><p>the</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;What-is-AWS&quot;&gt;&lt;a href=&quot;#What-is-AWS&quot; class=&quot;headerlink&quot; title=&quot;What is AWS?&quot;&gt;&lt;/a&gt;What is AWS?&lt;/h2&gt;&lt;p&gt;AWS is the cloud computing platf</summary>
      
    
    
    
    <category term="Big Data" scheme="https://hehehuang.github.io/categories/Big-Data/"/>
    
    
    <category term="AWS" scheme="https://hehehuang.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop</title>
    <link href="https://hehehuang.github.io/2022/09/20/Hadoop/"/>
    <id>https://hehehuang.github.io/2022/09/20/Hadoop/</id>
    <published>2022-09-19T17:45:57.203Z</published>
    <updated>2022-09-24T10:01:40.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="What-is-Hadoop"><a href="#What-is-Hadoop" class="headerlink" title="What is Hadoop"></a>What is Hadoop</h1><p>Hadoop &#x3D; HDFS + MapReduce </p><h3 id="Why-need-Hadoop"><a href="#Why-need-Hadoop" class="headerlink" title="Why need Hadoop?"></a>Why need Hadoop?</h3><p>because the cpu, distrbution computing. </p><p>what is changes</p><h3 id="History-of-Hadoop"><a href="#History-of-Hadoop" class="headerlink" title="History of Hadoop"></a>History of Hadoop</h3><h4 id="Hadoop-1-0"><a href="#Hadoop-1-0" class="headerlink" title="Hadoop 1.0"></a>Hadoop 1.0</h4><h4 id="Hadoop-2-0"><a href="#Hadoop-2-0" class="headerlink" title="Hadoop 2.0"></a>Hadoop 2.0</h4><h4 id="Hadoop-3-0"><a href="#Hadoop-3-0" class="headerlink" title="Hadoop 3.0"></a>Hadoop 3.0</h4><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><h4 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h4><p>how data is processed in MapReduce</p><p>Map stage + Reduce</p><p><img src="https://www.todaysoftmag.com/images/articles/tsm33/large/a11.png" alt="TSM - Hadoop MapReduce deep diving and tuning"></p><p>shuffling in Partition</p><p>the number of partitioner is decide by the number of Reduce task</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;What-is-Hadoop&quot;&gt;&lt;a href=&quot;#What-is-Hadoop&quot; class=&quot;headerlink&quot; title=&quot;What is Hadoop&quot;&gt;&lt;/a&gt;What is Hadoop&lt;/h1&gt;&lt;p&gt;Hadoop &amp;#x3D; HDFS + M</summary>
      
    
    
    
    <category term="Big Data" scheme="https://hehehuang.github.io/categories/Big-Data/"/>
    
    
    <category term="Hadoop" scheme="https://hehehuang.github.io/tags/Hadoop/"/>
    
    <category term="Mapreduce" scheme="https://hehehuang.github.io/tags/Mapreduce/"/>
    
  </entry>
  
  <entry>
    <title>PySpark</title>
    <link href="https://hehehuang.github.io/2022/09/20/PySpark/"/>
    <id>https://hehehuang.github.io/2022/09/20/PySpark/</id>
    <published>2022-09-19T17:45:57.203Z</published>
    <updated>2022-09-25T12:46:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="What-is-Spark"><a href="#What-is-Spark" class="headerlink" title="What is Spark?"></a>What is Spark?</h1><p>Spark is a data processing engine for big data sets. </p><p>Pyspark is that Spark can be call by python language.</p><h2 id="why-need-Spark"><a href="#why-need-Spark" class="headerlink" title="why need Spark?"></a>why need Spark?</h2><p><strong>Advantages of spark</strong></p><ol><li><p>handle many case: </p><p>SparkSQL(dataframe) for data analysis</p><p>Spark streaming for real-time analysis</p><p>Spark Ml for machine learning</p></li><li><p>work with many source</p><p>Standalone, Hadoop, K8s,AWS</p></li><li><p>better than Mapreduce, enhancement to mapreduce (in real-time processing)</p></li></ol><p><strong>Why Spark is better than Mapreduce in terms of efficiency</strong></p><p><strong>Mapreduce</strong> takes input from the HDFS, each map task process it , keeps in memory ,if exceed the default 100MB(io.sort.mb), then it split to disk.reduce task take data from disk and continue to process it.</p><p><strong>Spark</strong> uses random access memory (RAM) to cache and process data instead of a file system.</p><p>Spark creates a Directed Acyclic Graph (DAG) to schedule tasks and the orchestration of nodes across the Hadoop cluster.</p><h2 id="How-Spark-work-in-cluster"><a href="#How-Spark-work-in-cluster" class="headerlink" title="How Spark work in cluster?"></a>How Spark work in cluster?</h2><p>HDFS,Yarn,Spark</p><p>HDFS: Name node, Data Node</p><p>Yarn: Resource Manager, Node Manager</p><p>Spark: Driver, Worker</p><p>when spark start to work, it need HDFS to provide the data and Yarn to provide computing resource.</p><p><img src="https://learn.microsoft.com/en-us/azure/hdinsight/spark/media/apache-spark-streaming-high-availability/hdi-yarn-architecture.png" alt="hdi-yarn-architecture"></p><h3 id="Spark-RDD"><a href="#Spark-RDD" class="headerlink" title="Spark RDD"></a>Spark RDD</h3><p>Features:</p><ol><li><p>partitions distributed in cluster</p></li><li><p>computing each split</p></li><li><p>dependencies on each RDDs (lineage)</p></li><li><p>Key-value RDDs have Partioner</p></li><li><p>sent computing to data</p></li></ol><p><img src="https://miro.medium.com/max/1400/1*l2MUHFvWfcdiUbh7Y-fM5Q.png" alt="1*l2MUHFvWfcdiUbh7Y-fM5Q"></p><p>Two step in RDD:</p><p>Transform: transform one RDD to another RDD</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkContext</span><br><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkConf</span><br><span class="line"></span><br><span class="line">conf = SparkConf()</span><br><span class="line">sc = SparkContext(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd1 = sc.parallelize([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">rdd2 = rdd1.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x+<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Action: take action for the RDD, normally, the output will be value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = rdd2.collect()</span><br></pre></td></tr></table></figure><h5 id="RDD-Persistence-and-Caching-Mechanism"><a href="#RDD-Persistence-and-Caching-Mechanism" class="headerlink" title="RDD Persistence and Caching Mechanism"></a>RDD Persistence and Caching Mechanism</h5><p>if there are two actions in an spark application. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rdd1 = sc.textfile(//:HDFS..)</span><br><span class="line">rdd2 = sc.map(lambda x: x+1)</span><br><span class="line"># one action </span><br><span class="line">rdd3 = rdd2.count()</span><br><span class="line"># another action</span><br><span class="line">rdd4 = rdd2.count()</span><br></pre></td></tr></table></figure><p>one action means one job in spark application.  the rdd will be released in memory, which is that rdd3 will be cleaned. </p><p>the rdd4 is the result of action at the rdd2. it will be causing that the re-calculation of rdd2. </p><p>for this senaria, we need the RDD <strong>Persistence and cache</strong> to save our time and cost.  </p><p>serveral <strong>caching mechanism</strong> is available.</p><h4 id="Spark-narrow-and-wide-transformation"><a href="#Spark-narrow-and-wide-transformation" class="headerlink" title="Spark narrow and wide transformation"></a>Spark narrow and wide transformation</h4><p>Narrow transformation provides one to one transformation which there is no shuffling of data cross the nodes (every node do their own work can the results are concatenated). Some examples of narrow transformation include: map(), flatMap(), filter(), sample(), union(). For wide transformation, all the elements are required to do the operation. Partition live in many partitions of parent RDD which results in shuffling of data across the nodes. Some examples of wide transformation include: intersection(), distinct(), groupByKey(), reduceByKey().</p><p><img src="https://miro.medium.com/max/1400/0*-fmFL32Tne6JiFpz.png" alt="0*-fmFL32Tne6JiFpz"></p><h3 id="Spark-Core"><a href="#Spark-Core" class="headerlink" title="Spark Core"></a>Spark Core</h3><p>Application in Spark Spark Content</p><p>application with several jobs (Action), one job with several stage (wide transform), one stage with several tasks</p><p><img src="https://techvidvan.com/tutorials/wp-content/uploads/sites/2/2019/11/Internals-of-Job-Execution-In-Spark.jpg" alt="Spark Architecture - Spark internals of job execution"></p><h3 id="Spark-Sql"><a href="#Spark-Sql" class="headerlink" title="Spark Sql"></a>Spark Sql</h3><h3 id="Spark-Streaming"><a href="#Spark-Streaming" class="headerlink" title="Spark Streaming"></a>Spark Streaming</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://learn.microsoft.com/en-us/azure/hdinsight/spark/media/apache-spark-streaming-high-availability/apache-spark-streaming.png" alt="apache-spark-streaming"></h3><h3 id="Spark-ML"><a href="#Spark-ML" class="headerlink" title="Spark ML"></a>Spark ML</h3><h4 id="DataFrame-Based"><a href="#DataFrame-Based" class="headerlink" title="DataFrame Based"></a>DataFrame Based</h4><h4 id="RDD-Based"><a href="#RDD-Based" class="headerlink" title="RDD Based"></a>RDD Based</h4><p>MLlib</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.ibm.com/cloud/blog/hadoop-vs-spark">https://www.ibm.com/cloud/blog/hadoop-vs-spark</a></p><p><a href="https://learn.microsoft.com/en-us/azure/hdinsight/spark/apache-spark-streaming-high-availability">https://learn.microsoft.com/en-us/azure/hdinsight/spark/apache-spark-streaming-high-availability</a></p><p><a href="https://cedricyf.medium.com/get-started-on-apache-pyspark-part-2-15d62494c18a">https://cedricyf.medium.com/get-started-on-apache-pyspark-part-2-15d62494c18a</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;What-is-Spark&quot;&gt;&lt;a href=&quot;#What-is-Spark&quot; class=&quot;headerlink&quot; title=&quot;What is Spark?&quot;&gt;&lt;/a&gt;What is Spark?&lt;/h1&gt;&lt;p&gt;Spark is a data processi</summary>
      
    
    
    
    <category term="Big Data" scheme="https://hehehuang.github.io/categories/Big-Data/"/>
    
    
    <category term="Hadoop" scheme="https://hehehuang.github.io/tags/Hadoop/"/>
    
  </entry>
  
</feed>
